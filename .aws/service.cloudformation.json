{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launches the Equity API",

  "Parameters" : {

    "ServiceName" : {
      "Type" : "String"
    },

    "ServicePort" : {
      "Type" : "String"
    },

    "ServiceImage" : {
      "Type" : "String"
    },

    "ServiceVersion" : {
      "Type" : "String"
    },

    "DesiredCount" : {
      "Type" : "String",
      "Default" : "6"
    }

  },

  "Resources" : {

    "LoggingGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": "5"
      }
    },

    "ServiceDefinition" : {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [
          {
            "Name" : { "Ref" : "ServiceName" },
            "Essential" : "true",
            "Command" : [ "puma"],
            "Image" : { "Fn::Join" : ["", [{ "Ref" : "ServiceImage" }, ":", { "Ref" : "ServiceVersion" }]] },
            "Memory" : "128",
            "Cpu" : "128",
            "LogConfiguration" : {
              "LogDriver" : "awslogs",
              "Options" : {
                "awslogs-group": { "Ref" : "LoggingGroup" },
                "awslogs-region": { "Ref" : "AWS::Region" }
              }
            },
            "Environment" : [
              {
                "Name" : "RACK_ENV",
                "Value" : "production"
              },
              {
                "Name" : "HOSTED_ZONE",
                "Value" : { "Fn::ImportValue": "ECSHostedZone" }
              },
              {
                "Name" : "PORT",
                "Value" : { "Ref" : "ServicePort" }
              },
              {
                "Name" : "DATABASE_ORM",
                "Value" : "dynamo"
              },
              {
                "Name" : "TABLE_NAME",
                "Value" : { "Fn::ImportValue": "EquityAPIDynamoDBTable" }
              },
              {
                "Name" : "AWS_REGION",
                "Value" : { "Ref" : "AWS::Region" }
              }
            ],
            "PortMappings" : [{
              "ContainerPort" : { "Ref" : "ServicePort" },
              "HostPort" : { "Ref" : "ServicePort" }
            }]
          }
        ]
      }
    },

    "Service": {
      "Type": "AWS::ECS::Service",
      "Properties" : {
        "Cluster": { "Fn::ImportValue" : "ECSCluster" },
        "DesiredCount": { "Ref": "DesiredCount" },
        "TaskDefinition" : { "Ref":"ServiceDefinition" },
        "Role" : { "Fn::ImportValue" : "ECSSharedServiceRoleArn" },
        "LoadBalancers" : [{
          "LoadBalancerName" : { "Ref" : "ElasticLoadBalancer" },
          "ContainerName" : { "Ref" : "ServiceName" },
          "ContainerPort" : { "Ref" : "ServicePort" }
        }]
      }
    },

    "ScalableTarget" : {
      "Type" : "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties" : {
        "MaxCapacity" : 20,
        "MinCapacity" : { "Ref": "DesiredCount" },
        "ResourceId" : { "Fn::Join" : ["/", [
          "service",
          { "Fn::GetAtt": [ "ECS", "ECSCluster" ] },
          { "Fn::GetAtt" : ["Service", "Name" ] }
        ]]},
        "RoleARN" : { "Fn::ImportValue" : "ECSSenderScalingRoleArn" },
        "ScalableDimension" : "ecs:service:DesiredCount",
        "ServiceNamespace" : "ecs"
      }
    },

    "ScalingPolicy" : {
      "Type" : "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties" : {
        "PolicyName" : "EquityAPIStepScalingPolicy",
        "PolicyType" : "StepScaling",
        "ScalingTargetId" : { "Ref": "ScalableTarget" },
        "StepScalingPolicyConfiguration" : {
          "AdjustmentType" : "PercentChangeInCapacity",
          "Cooldown" : 60,
          "MetricAggregationType" : "Average",
          "StepAdjustments" : [{
            "MetricIntervalLowerBound" : 0,
            "ScalingAdjustment" : 6
          }]
        }
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Scheme" : "internal",
        "SecurityGroups" : [ { "Ref" : "LoadBalancerSecurityGroup" } ],
        "Subnets" : [
          { "Fn::ImportValue" : "NetworkPrivateSubnetA" },
          { "Fn::ImportValue" : "NetworkPrivateSubnetB" },
          { "Fn::ImportValue" : "NetworkPrivateSubnetC" }
        ],
        "Listeners" : [{
          "LoadBalancerPort" : "80",
          "InstancePort" : { "Ref" : "ServicePort" },
          "Protocol" : "HTTP"
        }],
        "HealthCheck" : {
          "Target" : { "Fn::Join" : ["", ["HTTP:", { "Ref" : "ServicePort" }, "/ping"]] },
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "20",
          "Timeout" : "10"
        }
      }
    },

    "RequestCount100": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties" : {
        "MetricName": "RequestCount",
        "Namespace": "AWS/ELB",
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "5",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "100",
        "AlarmActions": [{ "Ref" : "ScalingPolicy" }],
        "OKActions" : [{ "Ref" : "ScalingPolicy" }],
        "Dimensions": [{
          "Name": "LoadBalancerName",
          "Value": { "Ref": "ElasticLoadBalancer" }
        }]
      }
    },

    "RequestCount200": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties" : {
        "MetricName": "RequestCount",
        "Namespace": "AWS/ELB",
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "5",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "200",
        "AlarmActions": [{ "Ref" : "ScalingPolicy" }],
        "OKActions" : [{ "Ref" : "ScalingPolicy" }],
        "Dimensions": [{
          "Name": "LoadBalancerName",
          "Value": { "Ref": "ElasticLoadBalancer" }
        }]
      }
    },

    "RequestCount500": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties" : {
        "MetricName": "RequestCount",
        "Namespace": "AWS/ELB",
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "5",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "500",
        "AlarmActions": [{ "Ref" : "ScalingPolicy" }],
        "OKActions" : [{ "Ref" : "ScalingPolicy" }],
        "Dimensions": [{
          "Name": "LoadBalancerName",
          "Value": { "Ref": "ElasticLoadBalancer" }
        }]
      }
    },

    "LoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable TCP access on port 80",
        "VpcId" : { "Fn::ImportValue" : "NetworkVPCId" },
        "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : { "Fn::Join" : ["", ["10.", { "Fn::ImportValue" : "NetworkVPCSecondOctet" }, ".0.0/16"]] }
        }]
      }
    },

    "LoadBalancerIngressIntoECSServer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": { "Ref" : "ServicePort" },
        "ToPort": { "Ref" : "ServicePort" },
        "SourceSecurityGroupId": { "Ref" : "LoadBalancerSecurityGroup" },
        "GroupId": { "Fn::ImportValue" : "ECSSecurityGroup" }
      }
    },

    "ServiceDNSZone" : {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" :  ["", [{ "Fn::ImportValue" : "ECSHostedZone" }, "."]] },
        "RecordSets" : [{
          "Name" : { "Fn::Join" : ["", [{ "Ref" : "ServiceName" }, ".", { "Fn::ImportValue" : "ECSHostedZone" }, "."]] },
          "Type" : "A",
          "AliasTarget" : {
            "HostedZoneId" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "CanonicalHostedZoneNameID"] },
            "DNSName" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "DNSName"] }
          }
        }]
      }
    }

  }
}
